name: Run Tests
on: workflow_dispatch
jobs:
  first-test:
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish-file-name.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        id: my-cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: desp-node-modules-${{ hashFiles('packages-lock.json') }}
      - name: Install dependencies
        if: steps.my-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: build project
        run: npm run build
      - name: Publish JS filename
        id: publish-file-name
        run: find dist/assets/*.js -type f -execdure echo 'script-file={}' >> $GITHUB_OUTPUT';'        
      - name: Run tests
        run: npm test
        id: run-tests
      - name: upload artifacts
        if: failure() && ${{ steps.run-tests.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: my-dist-files
          path: |
            package.json
            dist          
  deploy-new:
    needs: first-test
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: my-dist-files
      - name: list files
        continue-on-error: true
        run: ls
      - name: Output filename
        run: echo "${{ needs.first-test.outputs.script-file }}"
  deploy:
    needs: first-test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Deploy
        run: echo "Deploying"
  report:
    needs: [first-test, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: |
          echo "${{ github}}"
    
      
    

  
        
